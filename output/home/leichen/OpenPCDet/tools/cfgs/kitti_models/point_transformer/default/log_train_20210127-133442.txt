2021-01-27 13:34:42,662   INFO  **********************Start logging**********************
2021-01-27 13:34:42,662   INFO  CUDA_VISIBLE_DEVICES=ALL
2021-01-27 13:34:42,662   INFO  cfg_file         /home/leichen/OpenPCDet/tools/cfgs/kitti_models/point_transformer.yaml
2021-01-27 13:34:42,662   INFO  batch_size       2
2021-01-27 13:34:42,662   INFO  epochs           80
2021-01-27 13:34:42,662   INFO  workers          8
2021-01-27 13:34:42,662   INFO  extra_tag        default
2021-01-27 13:34:42,662   INFO  ckpt             None
2021-01-27 13:34:42,662   INFO  pretrained_model None
2021-01-27 13:34:42,662   INFO  launcher         none
2021-01-27 13:34:42,662   INFO  tcp_port         18888
2021-01-27 13:34:42,662   INFO  sync_bn          False
2021-01-27 13:34:42,662   INFO  fix_random_seed  False
2021-01-27 13:34:42,662   INFO  ckpt_save_interval 1
2021-01-27 13:34:42,662   INFO  local_rank       0
2021-01-27 13:34:42,662   INFO  max_ckpt_save_num 30
2021-01-27 13:34:42,662   INFO  merge_all_iters_to_one_epoch False
2021-01-27 13:34:42,662   INFO  set_cfgs         None
2021-01-27 13:34:42,662   INFO  max_waiting_mins 0
2021-01-27 13:34:42,662   INFO  start_epoch      0
2021-01-27 13:34:42,662   INFO  save_to_file     False
2021-01-27 13:34:42,663   INFO  cfg.ROOT_DIR: /home/leichen/OpenPCDet
2021-01-27 13:34:42,663   INFO  cfg.LOCAL_RANK: 0
2021-01-27 13:34:42,663   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-01-27 13:34:42,663   INFO  
cfg.DATA_CONFIG = edict()
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATA_PATH: /media/leichen/SeagateBackupPlusDrive/KITTI_DATABASE/
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2021-01-27 13:34:42,663   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-01-27 13:34:42,663   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-01-27 13:34:42,663   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:20', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-01-27 13:34:42,663   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'sample_points', 'NUM_POINTS': {'train': 16384, 'test': 16384}}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}]
2021-01-27 13:34:42,663   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-01-27 13:34:42,663   INFO  
cfg.MODEL = edict()
2021-01-27 13:34:42,663   INFO  cfg.MODEL.NAME: PointRCNN
2021-01-27 13:34:42,663   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2021-01-27 13:34:42,663   INFO  cfg.MODEL.BACKBONE_3D.NAME: PointTransformer
2021-01-27 13:34:42,663   INFO  
cfg.MODEL.BACKBONE_3D.CONFIG = edict()
2021-01-27 13:34:42,663   INFO  cfg.MODEL.BACKBONE_3D.CONFIG.NPOINTS: [16384]
2021-01-27 13:34:42,663   INFO  cfg.MODEL.BACKBONE_3D.CONFIG.NBLOCKS: [4]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.BACKBONE_3D.CONFIG.NNEIGHBOR: [1]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.BACKBONE_3D.CONFIG.DPOINTS: [4]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.BACKBONE_3D.CONFIG.DTRANSFORMER: [512]
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.POINT_HEAD = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.NAME: PointHeadBox
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.CLS_FC: [256, 256]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.REG_FC: [256, 256]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.CLASS_AGNOSTIC: False
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.USE_POINT_FEATURES_BEFORE_FUSION: False
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER: PointResidualCoder
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.use_mean_size: True
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.mean_size: [[3.9, 1.6, 1.56], [0.8, 0.6, 1.73], [1.76, 0.6, 1.73]]
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_REG: WeightedSmoothL1Loss
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_box_weight: 1.0
2021-01-27 13:34:42,664   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.ROI_HEAD = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.NAME: PointRCNNHead
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2021-01-27 13:34:42,664   INFO  
cfg.MODEL.ROI_HEAD.ROI_POINT_POOL = edict()
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.POOL_EXTRA_WIDTH: [0.0, 0.0, 0.0]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.NUM_SAMPLED_POINTS: 512
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.ROI_POINT_POOL.DEPTH_NORMALIZER: 70.0
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.XYZ_UP_LAYER: [128, 128]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.CLS_FC: [256, 256]
2021-01-27 13:34:42,664   INFO  cfg.MODEL.ROI_HEAD.REG_FC: [256, 256]
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.0
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.USE_BN: False
2021-01-27 13:34:42,665   INFO  
cfg.MODEL.ROI_HEAD.SA_CONFIG = edict()
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.NPOINTS: [128, 32, -1]
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.RADIUS: [0.2, 0.4, 100]
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.NSAMPLE: [16, 16, 16]
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.SA_CONFIG.MLPS: [[128, 128, 128], [128, 128, 256], [256, 256, 512]]
2021-01-27 13:34:42,665   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG = edict()
2021-01-27 13:34:42,665   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN = edict()
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2021-01-27 13:34:42,665   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST = edict()
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 9000
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.85
2021-01-27 13:34:42,665   INFO  
cfg.MODEL.ROI_HEAD.TARGET_CONFIG = edict()
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: cls
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.6
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.45
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2021-01-27 13:34:42,665   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2021-01-27 13:34:42,666   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG = edict()
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CLS_LOSS: BinaryCrossEntropy
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.REG_LOSS: smooth-l1
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2021-01-27 13:34:42,666   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_cls_weight: 1.0
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_reg_weight: 1.0
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_corner_weight: 1.0
2021-01-27 13:34:42,666   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-01-27 13:34:42,666   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-01-27 13:34:42,666   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.1
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-01-27 13:34:42,666   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-01-27 13:34:42,666   INFO  
cfg.OPTIMIZATION = edict()
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 2
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.LR: 0.01
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-01-27 13:34:42,666   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-01-27 13:34:42,667   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-01-27 13:34:42,667   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-01-27 13:34:42,667   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-01-27 13:34:42,667   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-01-27 13:34:42,667   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-01-27 13:34:42,667   INFO  cfg.TAG: point_transformer
2021-01-27 13:34:42,667   INFO  cfg.EXP_GROUP_PATH: home/leichen/OpenPCDet/tools/cfgs/kitti_models
2021-01-27 13:34:42,761   INFO  Database filter by min points Car: 14357 => 13532
2021-01-27 13:34:42,761   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-01-27 13:34:42,761   INFO  Database filter by min points Cyclist: 734 => 705
2021-01-27 13:34:42,775   INFO  Database filter by difficulty Car: 13532 => 10759
2021-01-27 13:34:42,778   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-01-27 13:34:42,778   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-01-27 13:34:42,784   INFO  Loading KITTI dataset
2021-01-27 13:34:42,858   INFO  Total samples for KITTI dataset: 3712
2021-01-27 13:34:44,386   INFO  PointRCNN(
  (vfe): None
  (backbone_3d): PointTransformer(
    (fc_begin): Sequential(
      (0): Linear(in_features=4, out_features=32, bias=True)
      (1): ReLU()
      (2): Linear(in_features=32, out_features=32, bias=True)
    )
    (fc_middle): Sequential(
      (0): Linear(in_features=512, out_features=512, bias=True)
      (1): ReLU()
      (2): Linear(in_features=512, out_features=512, bias=True)
    )
    (transformer_begin): TransformerBlock(
      (fc1): Linear(in_features=32, out_features=512, bias=True)
      (fc2): Linear(in_features=512, out_features=32, bias=True)
      (fc_delta): Sequential(
        (0): Linear(in_features=3, out_features=512, bias=True)
        (1): ReLU()
        (2): Linear(in_features=512, out_features=512, bias=True)
      )
      (fc_gamma): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
        (1): ReLU()
        (2): Linear(in_features=512, out_features=512, bias=True)
      )
      (w_qs): Linear(in_features=512, out_features=512, bias=False)
      (w_ks): Linear(in_features=512, out_features=512, bias=False)
      (w_vs): Linear(in_features=512, out_features=512, bias=False)
    )
    (transformer_middle): TransformerBlock(
      (fc1): Linear(in_features=512, out_features=512, bias=True)
      (fc2): Linear(in_features=512, out_features=512, bias=True)
      (fc_delta): Sequential(
        (0): Linear(in_features=3, out_features=512, bias=True)
        (1): ReLU()
        (2): Linear(in_features=512, out_features=512, bias=True)
      )
      (fc_gamma): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=True)
        (1): ReLU()
        (2): Linear(in_features=512, out_features=512, bias=True)
      )
      (w_qs): Linear(in_features=512, out_features=512, bias=False)
      (w_ks): Linear(in_features=512, out_features=512, bias=False)
      (w_vs): Linear(in_features=512, out_features=512, bias=False)
    )
    (transition_downs): ModuleList(
      (0): TransitionDown(
        (sa): PointNetSetAbstraction(
          (mlp_convs): ModuleList(
            (0): Conv2d(35, 64, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (1): TransitionDown(
        (sa): PointNetSetAbstraction(
          (mlp_convs): ModuleList(
            (0): Conv2d(67, 128, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (2): TransitionDown(
        (sa): PointNetSetAbstraction(
          (mlp_convs): ModuleList(
            (0): Conv2d(131, 256, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (3): TransitionDown(
        (sa): PointNetSetAbstraction(
          (mlp_convs): ModuleList(
            (0): Conv2d(259, 512, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (transition_ups): ModuleList(
      (0): TransitionUp(
        (P2_fc): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (P1_fc): Linear(in_features=256, out_features=256, bias=False)
      )
      (1): TransitionUp(
        (P2_fc): Sequential(
          (0): Linear(in_features=256, out_features=256, bias=True)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (P1_fc): Linear(in_features=128, out_features=128, bias=False)
      )
      (2): TransitionUp(
        (P2_fc): Sequential(
          (0): Linear(in_features=128, out_features=128, bias=True)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (P1_fc): Linear(in_features=64, out_features=64, bias=False)
      )
      (3): TransitionUp(
        (P2_fc): Sequential(
          (0): Linear(in_features=64, out_features=64, bias=True)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (P1_fc): Linear(in_features=32, out_features=32, bias=False)
      )
    )
    (transformer_downs): ModuleList(
      (0): TransformerBlock(
        (fc1): Linear(in_features=64, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=64, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
      (1): TransformerBlock(
        (fc1): Linear(in_features=128, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=128, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
      (2): TransformerBlock(
        (fc1): Linear(in_features=256, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=256, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
      (3): TransformerBlock(
        (fc1): Linear(in_features=512, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=512, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
    )
    (transformer_ups): ModuleList(
      (0): TransformerBlock(
        (fc1): Linear(in_features=512, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=512, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
      (1): TransformerBlock(
        (fc1): Linear(in_features=256, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=256, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
      (2): TransformerBlock(
        (fc1): Linear(in_features=128, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=128, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
      (3): TransformerBlock(
        (fc1): Linear(in_features=64, out_features=512, bias=True)
        (fc2): Linear(in_features=512, out_features=64, bias=True)
        (fc_delta): Sequential(
          (0): Linear(in_features=3, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (fc_gamma): Sequential(
          (0): Linear(in_features=512, out_features=512, bias=True)
          (1): ReLU()
          (2): Linear(in_features=512, out_features=512, bias=True)
        )
        (w_qs): Linear(in_features=512, out_features=512, bias=False)
        (w_ks): Linear(in_features=512, out_features=512, bias=False)
        (w_vs): Linear(in_features=512, out_features=512, bias=False)
      )
    )
  )
  (map_to_bev_module): None
  (pfe): None
  (backbone_2d): None
  (dense_head): None
  (point_head): PointHeadBox(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (cls_layers): Sequential(
      (0): Linear(in_features=512, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Linear(in_features=256, out_features=256, bias=False)
      (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Linear(in_features=256, out_features=3, bias=True)
    )
    (box_layers): Sequential(
      (0): Linear(in_features=512, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Linear(in_features=256, out_features=256, bias=False)
      (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Linear(in_features=256, out_features=8, bias=True)
    )
  )
  (roi_head): PointRCNNHead(
    (proposal_target_layer): ProposalTargetLayer()
    (reg_loss_func): WeightedSmoothL1Loss()
    (SA_modules): ModuleList(
      (0): PointnetSAModule(
        (groupers): ModuleList(
          (0): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(515, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
      )
      (1): PointnetSAModule(
        (groupers): ModuleList(
          (0): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
      )
      (2): PointnetSAModule(
        (groupers): ModuleList(
          (0): GroupAll()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
      )
    )
    (xyz_up_layer): Sequential(
      (0): Conv2d(5, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
      (2): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
      (3): ReLU()
    )
    (merge_down_layer): Sequential(
      (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): ReLU()
    )
    (cls_layers): Sequential(
      (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.0)
      (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
      (7): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
    )
    (reg_layers): Sequential(
      (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Dropout(p=0.0)
      (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
      (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU()
      (7): Conv1d(256, 7, kernel_size=(1,), stride=(1,))
    )
    (roipoint_pool3d_layer): RoIPointPool3d()
  )
)
2021-01-27 13:34:44,389   INFO  **********************Start training home/leichen/OpenPCDet/tools/cfgs/kitti_models/point_transformer(default)**********************
